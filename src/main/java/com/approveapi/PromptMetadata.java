/*
 * ApproveAPISwagger
 * The simple API to request a user's approval on anything via email + sms.
 *
 * OpenAPI spec version: 1.0.1
 * Contact: dev@approveapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.approveapi;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PromptMetadata
 */

public class PromptMetadata {
  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private String time;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ip_address";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_BROWSER = "browser";
  @SerializedName(SERIALIZED_NAME_BROWSER)
  private String browser;

  public static final String SERIALIZED_NAME_OPERATING_SYSTEM = "operating_system";
  @SerializedName(SERIALIZED_NAME_OPERATING_SYSTEM)
  private String operatingSystem;

  public PromptMetadata location(String location) {
    this.location = location;
    return this;
  }

   /**
   * The physical location, like Oakland, CA, of the action.
   * @return location
  **/
  @ApiModelProperty(value = "The physical location, like Oakland, CA, of the action.")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public PromptMetadata time(String time) {
    this.time = time;
    return this;
  }

   /**
   * The date/time of the action.
   * @return time
  **/
  @ApiModelProperty(value = "The date/time of the action.")
  public String getTime() {
    return time;
  }

  public void setTime(String time) {
    this.time = time;
  }

  public PromptMetadata ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * The IP address of the computer initiating the action.
   * @return ipAddress
  **/
  @ApiModelProperty(value = "The IP address of the computer initiating the action.")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public PromptMetadata browser(String browser) {
    this.browser = browser;
    return this;
  }

   /**
   * The web browser initiating the action, i.e. Chrome.
   * @return browser
  **/
  @ApiModelProperty(value = "The web browser initiating the action, i.e. Chrome.")
  public String getBrowser() {
    return browser;
  }

  public void setBrowser(String browser) {
    this.browser = browser;
  }

  public PromptMetadata operatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * The operating system initiating the action, i.e. Mac OS X.
   * @return operatingSystem
  **/
  @ApiModelProperty(value = "The operating system initiating the action, i.e. Mac OS X.")
  public String getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptMetadata promptMetadata = (PromptMetadata) o;
    return Objects.equals(this.location, promptMetadata.location) &&
        Objects.equals(this.time, promptMetadata.time) &&
        Objects.equals(this.ipAddress, promptMetadata.ipAddress) &&
        Objects.equals(this.browser, promptMetadata.browser) &&
        Objects.equals(this.operatingSystem, promptMetadata.operatingSystem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, time, ipAddress, browser, operatingSystem);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptMetadata {\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    browser: ").append(toIndentedString(browser)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

